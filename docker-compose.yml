services:
  postgres:
    image: postgres:17
    container_name: uae_postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_uae_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  api:
    build: 
      context: .
      dockerfile: ./app/Dockerfile
    image: alexflames77/uae_etl:latest
    container_name: uae_api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - POSTGRES_HOST=postgres
    ports:
      - "${API_PORT}:8010"
    volumes:
      - ./data:/app/data
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8010", "--log-level", "info"] 

  data_loader:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    container_name: uae_data_loader
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - POSTGRES_HOST=postgres
    volumes:
      - ./data:/app/data
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    command: ["python", "data_loader.py"]
    restart: on-failure

volumes:
  postgres_uae_data:
